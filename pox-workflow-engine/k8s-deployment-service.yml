---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appname-deployment
  namespace: name_space
  labels:
    app: appname
spec:
  replicas: replicas_num
  strategy:
    type: deploy_strategy_type #升级方式
  #rollingUpdate:##由于replicas为3,则整个升级,pod个数在2-4个之间
  # maxSurge: 100% #滚动升级时会先启动3个pod
  # maxUnavailable: 1 #滚动升级时允许的最大Unavailable的pod个数
  selector:
    matchLabels:
      app: appname
  template:
    metadata:
      labels:
        app: appname
    spec:
      imagePullSecrets:
        - name: harbor
      containers:
        - name: appname
          image: harbor_registry/name_space/appname:appversion
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: containerport
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: containerport
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: logpath
              mountPath: "/app/admin/logs"
          resources:
            requests:
              memory: "500Mi"
              cpu: "100m"
            limits:
              memory: "2000Mi"
              cpu: "1000m"
      nodeSelector:
        deployType: "microservice"
      volumes:
        - hostPath:
            path: "/data/trade/logs/base-facade"
          name: logpath
---
apiVersion: v1
kind: Service
metadata:
  name: appname
  namespace: name_space
spec:
  type: NodePort
  selector:
    app: appname
  ports:
    - protocol: TCP
      nodePort: appport
      port: appport
      targetPort: containerport